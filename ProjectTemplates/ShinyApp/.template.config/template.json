{
    "$schema": "http://json.schemastore.org/template",
    "author": "Shiny .NET",
    "classifications": [ "MAUI", "Shiny", "Prism", "ReactiveUI" ],
    "name": "Shiny MAUI Application",
    "shortName": "shinymaui",
    "description": "A project for creating a .NET MAUI /w Shiny.NET, Prism, & ReactiveUI",
    "identity": "Shiny.Templates.App",
    "sourceName": "ShinyApp",
    "preferNameDirectory": true,
    "tags": {
        "language": "C#",
        "type": "project"
    },    
    "primaryOutputs": [{
        "condition": "(HostIdentifier != \"dotnetcli\" && HostIdentifier != \"dotnetcli-preview\")",
        "path": "MauiProgram.cs"
    },{
        "condition": "(HostIdentifier != \"dotnetcli\" && HostIdentifier != \"dotnetcli-preview\")",
        "path": "Documentation.md"
    }],
    "SpecialCustomOperations": {
        "**.razor": {
            "operations": [{
                "type": "conditional",
                "configuration": {
                    "if": [ "@*#if" ],
                    "else": [ "@*#else" ],
                    "elseif": [ "@*#elseif" ],
                    "endif": [ "#endif*@" ],
                    "actionableIf": [ "@*#if" ],
                    "actionableElse": [ "@*#else" ],
                    "actionableElseif": [ "@*#elseif" ],
                    "actions": [ "cStyleUncomment", "cStyleReduceComment" ],
                    "trim": true,
                    "wholeLine": true,
                    "evaluator": "C++"
                }
            }]
        }
    },
    "postActions": [{
        "condition": "(HostIdentifier != \"dotnetcli\" && HostIdentifier != \"dotnetcli-preview\")",
        "description": "Open documentation file",
        "manualInstructions": [],
        "actionId": "84C0DA21-51C8-4541-9940-6CA19AF04EE6",
        "args": {
            "files": "0;1"
        },
        "continueOnError": true
    }],
    "symbols":{
        "Framework": {
            "type": "parameter",
            "description": "The target framework for the project.",
            "datatype": "choice",
            "choices": [{
                "choice": "net8.0",
                "description": "Target .NET 8.0"
            }],
            "replaces": "{DOTNET_TFM}",
            "defaultValue": "net8.0"
        },
        "markuptype": {
            "type": "parameter",
            "datatype": "choice",
            "description": "This will setup a standard XAML template, a MAUI Blazor project, or a C# powered markup using the .NET MAUI Community Toolkit",
            "displayName": "UI Markup Type",
            "choices": [{
                "choice": "XAML",
                "description": "XAML"
            },{
                "choice": "Blazor",
                "description": "Blazor"
            },{
                "choice": "CSharp",
                "description": "CSharp"
            }],
            "defaultValue": "XAML",
            "replaces": "{MARKUP_TYPE}"
        },
        "applicationId": {
            "type": "parameter",
            "description": "Set the Application Identifier",
            "datatype": "string",
            "defaultValue": "com.companyname.app",
            "isRequired": true,
            "replaces": "{APPLICATION_ID}"
        },
        "applicationIdGuid":{
            "type": "generated",
            "generator": "guid",
            "replaces": "{APPLICATION_ID_GUID}",
            "parameters": {
                "format": "D"
            }
        },
        "shinyframework": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "true",
            "description": "Add Shiny Framework by Allan Ritchie - Documentation https://github.com/shinyorg/framework - Lots of helpful services like navigation, zero boilerplate MVVM properties, viewmodel validation, localization, viewmodel lifecycles, dialog services, and more",
            "displayName": "Add Shiny Framework (Shiny + ReactiveUI + Prism)"
        },
        "localization":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add Localization (Microsoft.Extensions.Localization)",
            "displayName": "Add Localization (Microsoft.Extensions.Localization)"
        },
        "configuration": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "true",
            "description": "Add AppSettings.json (Shiny.Extensions.Configuration)",
            "displayName": "Add AppSettings.json (Shiny.Extensions.Configuration)"
        },
        "sentry": {
            "type": "parameter",
            "dataType": "bool",
            "defaultValue": "false",
            "description": "Add Sentry.IO logging to your application",
            "displayName": "Sentry.IO Logging"
        },        
        "sqlitelogging": {
            "type": "parameter",
            "dataType": "bool",
            "description": "SQLite Logging - (Shiny.Logging.Sqlite) - Great for logging local tests especially for background services in Shiny",
            "displayName": "SQLite Logging - (Shiny.Logging.Sqlite)",
            "defaultValue": "false"
        },
        "bluetoothle": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add BluetoothLE Client (Shiny.BluetoothLE)",
            "displayName": "Add BluetoothLE Client (Shiny.BluetoothLE)"
        },
        "blehosting": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add BluetoothLE Hosting (Shiny.BluetoothLE.Hosting)",
            "displayName": "Add BluetoothLE Hosting (Shiny.BluetoothLE.Hosting)"
        },
        "beacons": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add Beacons (Shiny.Beacons)",
            "displayName": "Add Beacons (Shiny.Beacons)"
        },
        "jobs": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add Background Jobs (Shiny.Jobs)",
            "displayName": "Add Background Jobs (Shiny.Jobs)"
        },
        "gps":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add GPS (Shiny.Locations)",
            "displayName": "Add GPS (Shiny.Locations)"
        },
        "geofencing":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add Geofencing (Shiny.Locations)",
            "displayName": "Add Geofencing (Shiny.Locations)"
        },
        "httptransfers": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add Background HTTP Uploads & Downloads (Shiny.Net.Http)",
            "displayName": "Add Background HTTP Uploads & Downloads (Shiny.Net.Http)"
        },
        "notifications": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add Local Notifications (Shiny.Notifications)",
            "displayName": "Add Local Notifications (Shiny.Notifications)"
        },
        "startup":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Creates a class that executes immediately after Shiny is ready for action",
            "displayName": "Add Startup Service (Shiny.Core)"
        },
        "settings":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "This creates a special reactive object that binds to the platform preferences or secure storage",
            "displayName": "Add Bound Settings Class (Shiny.Core)"
        },
        "push": {
            "type": "parameter",
            "datatype": "choice",
            "defaultValue": "None",
            "description": "This will wire up all of the necessary permissions & libraries required for the selected push option.  You will still need to configure any additional API keys within the appsettings.json or MauiProgram.cs files",
            "displayName": "Add Push Notifications",
            "choices": [
                {
                    "choice": "None",
                    "description": "No push library is installed"
                },
                {
                    "choice": "Native",
                    "description": "Native (Shiny.Push)"
                },
                {
                    "choice": "Firebase",
                    "description": "Firebase Messaging - iOS/Android Only (Shiny.Push.FirebaseMessaging)"
                },
                {
                    "choice": "Azure Notification Hubs",
                    "description": "Azure Notifications Hubs (Shiny.Push.AzureNotificationHubs)"
                }
            ]
        },
        "authtype": {
            "type": "parameter",
            "description": "Authentication Setup - Microsoft Authentication Library (MSAL) - Documentation https://devblogs.microsoft.com/dotnet/authentication-in-dotnet-maui-apps-msal/  - MAUI WebAuthenticator: https://learn.microsoft.com/en-us/dotnet/maui/platform-integration/communication/authentication",
            "displayName": "Authentication Setup",
            "datatype": "choice",
            "choices": [{
                "choice": "None",
                "description": "None"
            },{ 
                "choice": "MAUI Web Authenticator",
                "description": "MAUI Web Authenticator"
            },{                 
                "choice": "MSAL Basic",
                "description": "Microsoft Authentication Library - Basic"
            },{
                "choice": "MSAL AzureB2C",
                "description": "Microsoft Authentication Library - AzureB2C"
            },{
                "choice": "MSAL Broker",
                "description": "Microsoft Authentication Library - Broker"
            }],
            "defaultValue": "None"
        }, 
        "msalclientid":{
            "type": "parameter",
            "dataType": "string",
            "description": "This is your Microsoft Authentication Library (MSAL) Application/Client ID setup within the Azure Portal",
            "defaultValue": "",
            "replaces":"{MSAL_CLIENT_ID}"
        },
        "authservice":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Creates a sample Microsoft Authentication Library (MSAL) or Web authenticator service to work with",
            "displayName": "Create Sample Authentication Service (if MSAL or Web Authenticator is selected)"
        },
        "refit":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add Refit API Client used with sample Authentication service",
            "displayName": "Add Refit HTTP Client with Authenication Service"
        },
        "maptype": {
            "type": "parameter",
            "description": "Maps",
            "displayName": "Maps",
            "datatype": "choice",
            "choices": [{
                "choice": "None",
                "description": "None"
            },{
                "choice": "MAUI",
                "description": "MAUI"
            },{
                "choice": "Google Maps",
                "description": "For use on Android & iOS"
            }],
            "defaultValue": "None"
        },
        "mapsandroidkey":{
            "type": "parameter",
            "dataType": "string",
            "description": "This is your Google Maps API Key setup within the Google Cloud Platform. Documentation https://learn.microsoft.com/en-us/xamarin/xamarin-forms/user-interface/map/setup",
            "displayName": "Sets your Android Maps API Key (used 'Mapping Choice' is selected)",
            "defaultValue": "",
            "replaces":"{MAUI_MAPS_ANDROID_KEY}"
        },
        "essentialsmedia":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Sets all up all the necessary boilerplate for the MAUI Essentials Media Picker",
            "displayName": "Setup MAUI Essentials - Media Picker"
        },
        "essentialsfilepicker":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Setup all the necessary boilerplate for the MAUI Essentials File Picker",
            "displayName": "Setup MAUI Essentials - File Picker"
        },
        "appactions":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Sets all up all the necessary boilerplate for the MAUI App Actions",
            "displayName": "Setup MAUI Essentials - App Actions"
        },
        "deeplinks":{
            "type": "parameter",
            "description": "Sets up initial deep link support",
            "displayName": "Setup Deep Linking Support URI",
            "defaultValue": "",
            "datatype": "string",
            "replaces": "{DEEPLINK_HOST}"
        },
        "communitytoolkit":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "true",
            "description": "MAUI Community Toolkit - Documentation https://learn.microsoft.com/en-us/dotnet/communitytoolkit/maui/",
            "displayName": "Add MAUI Community Toolkit"
        },
        "speechrecognition": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Setup Community Toolkit Speech-to-Text",
            "displayName": "Setup Community Toolkit Speech-to-Text"
        },        
        "mediaelement":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "MAUI Community Toolkit - Documentation https://learn.microsoft.com/en-us/dotnet/communitytoolkit/maui/",
            "displayName": "Add MAUI Community Toolkit Media Element"
        },
        "virtuallist":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "MAUI Virtual List View by Jon Dick (Redth) - Documentation https://github.com/Redth/Maui.VirtualListView",
            "displayName": "Add MAUI Virtual List View"            
        },
        "uraniumui":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Uranium UI by Enis Necipoglu - Documentation https://enisn-projects.io/docs/en/uranium/latest",
            "displayName": "Add Uranium UI"
        },
        "sharpnadocv":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Sharpnado CollectionView by Jean-Marie Alfonsi - Documentation https://github.com/roubachof/Sharpnado.CollectionView",
            "displayName": "Add Sharpnado CollectionView"
        },
        "sharpnadotabs":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Sharpnado Tabs by Jean-Marie Alfonsi - Documentation https://github.com/roubachof/Sharpnado.Tabs",
            "displayName": "Add Sharpnado Tabs"
        },
        "sqlite": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "SQLite.NET-PCL by Frank Krueger - Documentation https://github.com/praeclarum/sqlite-net",
            "displayName": "Add SQLite (SQLite.NET-PCL)"
        },
        "barcodes":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Wire up all of the barcode scanning services for ZXing.Net.MAUI by Jon Dick - For documentation, go to https://github.com/Redth/ZXing.Net.Maui",
            "displayName": "Add Barcode Scanning & Rendering (ZXing.Net.MAUI)"
        },
        "inappbilling":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "In-App Billing by James Montemagno - Documentation https://github.com/jamesmontemagno/InAppBillingPlugin",
            "displayName": "Add In-App Billing (Plugin.InAppBilling)"
        },
        "storereview":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Store Review Plugin by James Montemagno - Documentation https://github.com/jamesmontemagno/StoreReviewPlugin",
            "displayName": "Add Store Review (Plugin.StoreReview)"
        },
        "calendar":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Calendar Store Plugin by Gerald Versluis - Documentation https://github.com/jfversluis/Plugin.Maui.CalendarStore",
            "displayName": "Add Calendar Store (Plugin.Maui.CalendarStore)"
        },
        "audio":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Audio Plugin by Gerald Versluis - Documentation https://github.com/jfversluis/Plugin.Maui.Audio",
            "displayName": "Add Audio (Plugin.Maui.Audio)"
        }, 
        "screenrecord":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Screen Recording Plugin by Gerald Versluis - Documentation https://github.com/jfversluis/Plugin.Maui.ScreenRecording",
            "displayName": "Add Screen Recording (Plugin.Maui.ScreenRecording)"
        },         
        "fingerprint":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Fingerprint Plugin by Sven-Michael Stübe - Documentation https://github.com/smstuebe/xamarin-fingerprint",
            "displayName": "Add Fingerprint/Facial Recognition (Plugin.Fingerprint)"
        },
        "flipper":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add Drastic.Flipper - An amazing tool for your MAUI application by Tim Miller - Documentation: https://github.com/drasticactions/Drastic.Flipper",
            "displayName": "Add Drastic Flipper"
        },
        "skia":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add SkiaSharp - Documentation: https://github.com/mono/SkiaSharp",
            "displayName": "Add SkiaSharp"
        },
        "skiaextended":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add SkiaSharp Extended (Lottie) - Documentation: https://github.com/mono/SkiaSharp.Extended",
            "displayName": "Add SkiaSharp Extended (Lottie)" 
        },
        "ffimageloading":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add FFImageLoading MAUI - Documentation: https://github.com/microspaze/FFImageLoading.Maui",
            "displayName": "Add FFImageLoading MAUI" 
        },
        "embedio": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add EmbedIO Tiny Web Server - Documentation: https://unosquare.github.io/embedio/",
            "displayName": "Add EmbedIO Tiny Web Server"  
        },
        "mudblazor": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "BLAZOR - Add MudBlazor",
            "displayName": "BLAZOR - Add MudBlazor"  
        },
        "radzen": {
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "BLAZOR - Add Radzen.Blazor",
            "displayName": "BLAZOR - Add Radzen.Blazor"  
        },        
        "androidauto":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add Android Auto Support"
        },
        "carplay":{
            "type": "parameter",
            "datatype": "bool",
            "defaultValue": "false",
            "description": "Add iOS CarPlay Support"
        },
        "HostIdentifier": {
            "type": "bind",
            "binding": "HostIdentifier"
        },
        "usewebauthenticator":{
            "type": "computed",
            "datatype": "bool",
            "value": "(authtype == \"MAUI Web Authenticator\")"
        },
        "usemsal":{
            "type": "computed",
            "datatype": "bool",
            "value": "(authtype == \"MSAL Basic\" || authtype == \"MSAL AzureB2C\" || authtype == \"MSAL Broker\")"
        },
        "usemaps":{
            "type": "computed",
            "datatype": "bool",
            "value": "(maptype != \"None\")"
        },
        "usemauimaps":{
            "type": "computed",
            "datatype": "bool",
            "value": "(maptype == \"MAUI\")"
        },        
        "usegooglemaps":{
            "type": "computed",
            "datatype": "bool",
            "value": "(maptype == \"Google Maps\")"
        },
        "usemsalbasic":{
            "type": "computed",
            "datatype": "bool",
            "value": "(authtype == \"MSAL Basic\")"
        },
        "usemsalb2c":{
            "type": "computed",
            "datatype": "bool",
            "value": "(authtype == \"MSAL AzureB2C\")"
        },
        "usemsalbroker":{
            "type": "computed",
            "datatype": "bool",
            "value": "(authtype == \"MSAL Broker\")"
        },
        "usepushnative":{
            "type": "computed",
            "datatype": "bool",
            "value": "(push == \"Native\")"
        },
        "usepushfirebase":{
            "type": "computed",
            "datatype": "bool",
            "value": "(push == \"Firebase\")"
        },
        "usepushanh":{
            "type": "computed",
            "datatype": "bool",
            "value": "(push == \"Azure Notification Hubs\")"
        },
        "usepush":{
            "type": "computed",
            "datatype": "bool",
            "value": "(push != \"None\")"
        },
        "useconfig":{
            "type": "computed",
            "datatype": "bool",
            "value": "(configuration || push != \"None\" || appcenter != \"\" || authtype != \"None\")"
        },
        "useappcenter":{
            "type": "computed",
            "datatype": "bool",
            "value": "(appcenter != \"\")"
        },
        "usedeeplinks":{
            "type": "computed",
            "datatype": "bool",
            "value": "(deeplinks != \"\")"
        },        
        "usemaccatalyst":{
            "type": "computed",
            "datatype": "bool",
            "value": "(usepushfirebase == false && usemsal == false)"
        },
        "usexaml":{
            "type": "computed",
            "datatype": "bool",
            "value": "(markuptype == \"XAML\")"
        },
        "useblazor":{
            "type": "computed",
            "datatype": "bool",
            "value": "(markuptype == \"Blazor\")"
        },
        "usecsharpmarkup":{
            "type": "computed",
            "datatype": "bool",
            "value": "(markuptype == \"CSharp\")"
        },        
        "usehttp":{
            "type": "computed",
            "datatype": "bool",
            "value": "(authservice && refit)"
        }
    },
    "sources": [{
        "source": "./",
        "target": "./",
        "copyOnly": [
            "**/*.svg",
            "**/*.ttf",
            "**/*.txt"
        ],
        "modifiers": [
        {
            "condition": "(useconfig == false)",
            "exclude": [
                "appsettings.json",
                "appsettings.android.json",
                "appsettings.apple.json",
                "appsettings.ios.json",
                "appsettings.maccatalyst.json"
            ]
        },
        {
            "condition": "(startup == false)",
            "exclude": "AppStartup.cs"
        },
        {
            "condition": "(settings == false)",
            "exclude": "AppSettings.cs"
        },
        {
            "condition": "(localization == false)",
            "exclude": "MainViewModel.resx"
        },
        {
            "condition": "(usemsalbasic == false && usemsalb2c == false)",
            "exclude": "Platforms/Android/MsalActivity.cs"
        },
        {
            "condition": "(usewebauthenticator == false)",
            "exclude": "Platforms/Android/WebAuthenticatorActivity.cs"
        },
        {
            "condition": "(push == \"None\")",
            "exclude": "Delegates/MyPushDelegate.cs"
        },
        {
            "condition": "(httptransfers == false)",
            "exclude": "Delegates/MyHttpTransferDelegate.cs"
        },
        {
            "condition": "(gps == false)",
            "exclude": "Delegates/MyGpsDelegate.cs"
        },        
        {
            "condition": "(geofencing == false)",
            "exclude": "Delegates/MyGeofenceDelegate.cs"
        },
        {
            "condition": "(jobs == false)",
            "exclude": "Delegates/MyJob.cs"
        },
        {
            "condition": "(blehosting == false)",
            "exclude": "Delegates/MyBleGattCharacteristic.cs"
        },
        {
            "condition": "(notifications == false)",
            "exclude": "Delegates/MyLocalNotificationDelegate.cs"
        },
        {
            "condition": "(beacons == false)",
            "exclude": "Delegates/MyBeaconMonitoringDelegate.cs"
        }, 
        {
            "condition": "(appactions == false)",
            "exclude": "Delegates/AppActionDelegate.cs"
        }, 
        {
            "condition": "(usedeeplinks == false)",
            "exclude": "Delegates/DeepLinkDelegate.cs"
        }, 
        {
            "condition": "(sqlite == false)",
            "exclude": "Services/MySqliteConnection.cs"
        },
        {
            "condition": "(shinyframework == false)",
            "exclude": "FodyWeavers.xml"
        },
        {
            "condition": "(authservice == false)",
            "exclude": "Services/IAuthenticationService.cs"
        },
        {
            "condition": "(androidauto == false)",
            "exclude": "Platforms/Android/Auto/**"
        },
        {
            "condition": "(androidauto == false)",
            "exclude": "Platforms/Android/Resources/xml/automotive_app_desc.xml"
        },        
        {
            "condition": "(carplay == false)",
            "exclude": "Platforms/iOS/CarPlayImplementation/**"
        },
        {
            "condition": "(authservice == false || usemsal == false)",
            "exclude": "Services/Impl/MsalAuthenticationService.cs"
        },    
        {
            "condition": "(authservice == false || usewebauthenticator == false)",
            "exclude": "Services/Impl/WebAuthenticatorAuthenticationService.cs"
        },             
        {
            "condition": "(authservice == false || refit == false)",
            "exclude": "Services/Impl/IApiClient.cs"
        },
        {
            "condition": "(usecsharpmarkup == true)",
            "exclude": [
                "MainPage.xaml",
                "MainPage.xaml.cs"
            ]
        },
        {
            "condition": "(usecsharpmarkup == false)",
            "exclude": "MainPage.cs"
        },
        {
            "condition": "(storereview == false)",
            "exclude": "Platforms/Android/proguard.cfg"
        },
        {
            "condition": "(useblazor == false)",
            "exclude":[ 
                "*.razor",
                "Components/**",
                "wwwroot/**" 
            ]
        }]
    }]
}